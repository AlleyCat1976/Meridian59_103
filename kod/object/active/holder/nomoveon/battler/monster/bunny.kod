% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Bunny is Monster

constants:

   include blakston.khd

resources:

   bunny_koc_name_rsc = "ixleocbunny"
   bunny_name_rsc = "bunny"
   bunny_icon_rsc = bunny2.bgf
   bunny_desc_rsc = "bunny"

   bunny_dead_icon_rsc = bunny2X.bgf
   bunny_dead_name_rsc = "dead bunny"

   bunny_sound_hit = bunny_atkh.wav
   bunny_sound_miss = bunny_atkh.wav
   bunny_sound_death = bunny_dth.wav
   bunny_sound_aware = bunny_awr.wav

classvars:

   vrKocName = bunny_koc_name_rsc
   vrName = bunny_name_rsc
   vrIcon = bunny_icon_rsc
   vrDesc = bunny_desc_rsc
   vrDead_icon = bunny_dead_icon_rsc
   vrDead_name = bunny_dead_name_rsc

   viSpeed = SPEED_VERY_SLOW
   viAttack_type = ATCK_WEAP_SLASH
   viDefault_behavior = AI_FIGHT_KARMA_AGGRESSIVE | AI_MOVE_FLEE_FRIGHTENERS

   viDifficulty = 4
   viKarma = -45
   viCashmin = 175
   viCashmax = 375
   vrSound_hit = bunny_sound_hit
   vrSound_miss = bunny_sound_miss
   vrSound_aware = bunny_sound_aware
   vrSound_death = bunny_sound_death

properties:

   viTreasure_type = TID_ZOMBIE
   viLevel = 55

   piAnimation = ANIM_NONE

   vbSummoned = FALSE

   ptRevertControl = $

messages:

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_UNHOLY, 50 ],
                        [-ATCK_SPELL_HOLY, -25 ] ];
      propagate;
   }

   MonsterAttack(what=$)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE);
      AddPacket(4,200,2,2,2,3);

      return;
   }

   SendMoveAnimation()
   {
      % Cycle through "walking" bitmaps (groups 2-5) at 50 milliseconds per frame
      AddPacket(1,ANIMATE_CYCLE,4,200,2,2,2,3);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE,4,125,2,2,2,5,2,1);
         return;
      }

      % if no body animation

      propagate;
   }

   Delete()
   {
      if ptRevertControl <> $
      {
         deleteTimer(ptRevertControl);
         ptRevertControl = $;
      }
      propagate;
   }

   CanMorphTo()
   {
      return false;
   }
   
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

